import tkinter as tk
from tkinter import messagebox

class TicTacToe:
    def __init__(self, master):
        self.master = master
        self.master.title("Tic Tac Toe")
        self.current_player = "X"
        self.board = [" "]*9

        self.create_widgets()

    def create_widgets(self):
        # create the game board
        self.board_frame = tk.Frame(self.master)
        self.board_frame.pack()

        self.buttons = []
        for i in range(9):
            button = tk.Button(self.board_frame, text="", width=6, height=3,
                               font=("Helvetica", 20), command=lambda i=i: self.handle_click(i))
            button.grid(row=i // 3, column=i % 3)
            self.buttons.append(button)

        # set the background color of the X's to red and the O's to blue
        self.buttons[::2] = [button.configure(bg="red") or button for button in self.buttons[::2]]
        self.buttons[1::2] = [button.configure(bg="blue") or button for button in self.buttons[1::2]]

        # create a reset button
        self.reset_button = tk.Button(self.master, text="Reset", command=self.reset_game)
        self.reset_button.pack()

    def handle_click(self, i):
        if self.board[i] == " ":
            self.board[i] = self.current_player
            self.buttons[i].configure(text=self.current_player)
            if self.check_win():
                messagebox.showinfo("Congratulations!", f"{self.current_player} wins!")
                self.reset_game()
            elif " " not in self.board:
                messagebox.showinfo("Tie Game!", "The game ended in a tie.")
                self.reset_game()
            else:
                self.current_player = "O" if self.current_player == "X" else "X"

    def check_win(self):
        winning_combos = ((0, 1, 2), (3, 4, 5), (6, 7, 8),  # rows
                          (0, 3, 6), (1, 4, 7), (2, 5, 8),  # columns
                          (0, 4, 8), (2, 4, 6))  # diagonals
        for combo in winning_combos:
            if self.board[combo[0]] == self.board[combo[1]] == self.board[combo[2]] != " ":
                return True
        return False

    def reset_game(self):
        self.current_player = "X"
        self.board = [" "]*9
        for i in range(9):
            self.buttons[i].configure(text="", bg="SystemButtonFace")
root = tk.Tk()
game = TicTacToe(root)
root.mainloop()
